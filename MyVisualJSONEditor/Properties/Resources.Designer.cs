//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyVisualJSONEditor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyVisualJSONEditor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Source&quot;:
        ///  {
        ///    &quot;MasterName&quot;:&quot;gscene&quot;,
        ///    &quot;QueueSet&quot;:
        ///    [
        ///      {
        ///        &quot;Name&quot;:&quot;rscene&quot;,
        ///        &quot;Prefix&quot;:&quot;&quot;,
        ///        &quot;Suffix&quot;:&quot;.rscene&quot;,
        ///        &quot;Dir&quot;:&quot;pathto/scene/export/folder&quot;,
        ///        &quot;Remove&quot;:true,
        ///        &quot;Sink&quot;:true,
        ///        &quot;Tout&quot;:1000
        ///      },
        ///      {
        ///        &quot;Name&quot;:&quot;gscene&quot;,
        ///        &quot;Prefix&quot;:&quot;&quot;,
        ///        &quot;Suffix&quot;:&quot;.gscene&quot;,
        ///        &quot;Dir&quot;:&quot;pathto/scene/export/folder&quot;,
        ///        &quot;Remove&quot;:true,
        ///        &quot;Sink&quot;:true,
        ///        &quot;Tout&quot;:1000
        ///      }
        ///    ]
        ///  },
        ///  &quot;Sink&quot;:
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Compositor {
            get {
                return ResourceManager.GetString("Compositor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/compositor#&quot;,
        ///
        ///	title: &apos;Compositor&apos;,
        ///	description: &apos;Модуль осуществляет синхронизацию событий модулей системы. В результате формируется составное (композитное, агрегированное) событие. Это композитное событие включает данные от всех элементарных событий.&apos;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///	&apos;format&apos;:&apos;tab&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///	},
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;Source&quot;:{
        ///
        ///            &quot;id&quot;:&quot;Source&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Compositor_schema {
            get {
                return ResourceManager.GetString("Compositor_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/core#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;uint&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;integer&apos;,
        ///			&apos;minimum&apos; : 0,
        ///		},
        ///	}
        ///}.
        /// </summary>
        internal static string core {
            get {
                return ResourceManager.GetString("core", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/definitions#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;EventDir&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///                      
        ///				&quot;Prefix&quot;:{
        ///					title:&apos;Prefix&apos;,
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				},                            
        ///				&quot;Suffix&quot;:{
        ///					title:&apos;Suffix&apos;,
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				},                              
        ///				&quot;Dir&quot;:{
        ///					title:&apos;Dir&apos;,
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				}
        ///			},
        ///
        ///			&quot;r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string definitions {
            get {
                return ResourceManager.GetString("definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/drivers&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///
        ///		&apos;smartmicro39&apos; : {
        ///
        ///			&quot;type&quot;:&quot;object&quot;,
        ///
        ///			&quot;properties&quot;:{
        ///
        ///				&quot;PosX&quot;:{
        ///					&quot;id&quot;:&quot;PosX&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosY&quot;:{
        ///					&quot;id&quot;:&quot;PosY&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosZ&quot;:{
        ///					&quot;id&quot;:&quot;PosZ&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosH&quot;:{
        ///					&quot;id&quot;:&quot;PosH&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;AngleXY&quot;:{
        ///					&quot;id&quot;:&quot;AngleXY&quot;,
        ///					&quot;type&quot;:&quot;i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string drivers {
            get {
                return ResourceManager.GetString("drivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;Store&quot;:
        ///	{
        ///		&quot;ParamSet&quot;:
        ///		{
        ///			&quot;DbHost&quot;:&quot;127.0.0.1&quot;,
        ///			&quot;DbPort&quot;: 5432,
        ///			&quot;DbName&quot;:&quot;autocode&quot;,
        ///			&quot;DbUser&quot;:&quot;autocode&quot;,
        ///			&quot;DbPass&quot;: &quot;autocode&quot;,
        ///			&quot;PostName&quot;:&quot;EdgeServer&quot;,
        ///			&quot;Post&quot;:&quot;69e86fa7-e1ad-4e68-96b7-b910f40bdb49&quot;
        ///		}
        ///	},
        ///
        ///	&quot;SocketApi&quot;: 
        ///	{
        ///		&quot;ParamSet&quot;: 
        ///		{
        ///			&quot;Host&quot;: &quot;127.0.0.1&quot;,
        ///			&quot;Port&quot;: 14
        ///		}
        ///	},
        ///	 &quot;FileApi&quot;:
        ///	 {
        ///	   &quot;AddFactReact&quot;:
        ///	   [
        ///		 {
        ///		   &quot;ParamSet&quot;:
        ///		   {
        ///			 &quot;Channel&quot;:0,
        ///			 &quot;Prefix&quot;:&quot;&quot;,
        ///			 &quot;Suffix&quot;:&quot;&quot;,
        ///			 &quot;Dir&quot;:&quot;/tmp/edge/event_store/stor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EventStore {
            get {
                return ResourceManager.GetString("EventStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        /// {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/eventstore#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&quot;title&quot; : &quot;EventStore main.xconf&quot;,
        ///	&quot;type&quot; : &quot;object&quot;,
        ///
        ///	&apos;format&apos; : &apos;tab&apos;,
        ///
        ///	&quot;definitions&quot; : {
        ///
        ///		&quot;DbStore.ParamSet&quot; : {
        ///
        ///			&quot;type&quot; : &quot;object&quot;,
        ///
        ///			&quot;properties&quot;: {
        ///					
        ///				&quot;DbHost&quot;: {
        ///					&quot;title&quot; : &quot;Host&quot;,
        ///					&quot;type&quot;: &quot;string&quot;,
        ///					&quot;format&quot;: &quot;ipv4&quot;,
        ///					&quot;default&quot;: &quot;127.0.0.1&quot;,
        ///					&quot;binding&quot; : {
        ///						&quot;path&quot; : &quot;DbHost&quot;
        ///					}
        ///				},
        ///				&quot;DbPort&quot;: {
        ///					&quot;title&quot; : [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EventStore_schema {
            get {
                return ResourceManager.GetString("EventStore_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Analyzer&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;Target&quot;:
        ///      {
        ///        &quot;Median&quot;:[70, 150],
        ///        &quot;SteadyState&quot;:
        ///        {
        ///          &quot;Unstable&quot;:5,
        ///          &quot;PreStable&quot;:10,
        ///          &quot;Stable&quot;:15
        ///        }
        ///      },
        ///      &quot;Sweep&quot;:
        ///      {
        ///        &quot;Gain&quot;:[0.0, 24.0, 0.5],        
        ///        &quot;ExpTime&quot;:[1000, 2000, 5],        
        ///        &quot;Lut12&quot;:
        ///        {
        ///          &quot;Default&quot;:&quot;/etc/edge/grabcontrol.0/default.lut&quot;,
        ///          &quot;Evening&quot;:&quot;/etc/edge/grabcontrol.0/day.lut&quot;,
        ///          &quot;Night&quot;:&quot;/etc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GrabControl {
            get {
                return ResourceManager.GetString("GrabControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/grabcontrol#&quot;,
        ///
        ///	title:&apos;Grab Control&apos;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///	&apos;format&apos; : &apos;tab&apos;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;Analyzer&quot;:{
        ///            &quot;title&quot;:&quot;Analyzer&quot;,
        ///
        ///            &quot;type&quot;:&quot;object&quot;,            
        ///
        ///            &quot;properties&quot;:{
        ///
        ///                &quot;ParamSet&quot;:{
        ///                                
        ///                    &quot;type&quot;:&quot;object&quot;,
        ///                    format:&apos;tab&apos;,
        ///
        ///                    &quot;properties&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GrabControl_schema {
            get {
                return ResourceManager.GetString("GrabControl_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;apphost&quot;:
        ///	{
        ///		&quot;component_path&quot;: &quot;/opt/edge/libexec/lpr&quot;
        ///	},
        ///	&quot;core&quot;:
        ///	{
        ///		&quot;load&quot;:
        ///		[
        ///			&quot;edge-source-file&quot;,
        ///			&quot;edge-recog-autocode&quot;,
        ///			&quot;edge-out-file&quot; 
        ///		]
        ///	},
        ///    &quot;media-source&quot;:{
        ///        &quot;data_input_dir&quot;:&quot;/home/maxl/test/in_data&quot;,
        ///        &quot;meta_input_dir&quot;:&quot;/home/maxl/test/in_meta&quot;,
        ///        &quot;media_extension&quot;:&quot;.gframe&quot;
        ///    },
        ///    &quot;output&quot;:{
        ///        &quot;meta_queue_set&quot;:[
        ///            {
        ///                &quot;prefix&quot;:&quot;&quot;,
        ///                &quot;suffix&quot;:&quot;.lscene&quot;,
        ///                &quot;dir&quot;:&quot;/var/spo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR {
            get {
                return ResourceManager.GetString("LPR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/lpr.recognizer.module#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///
        ///    &quot;title&quot;:&quot;LPR Recognizer Module&quot;,
        ///    &quot;description&quot;:&quot;LPR Recognizer Module&quot;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;generate_tracks&quot;:{
        ///            &quot;type&quot;:&quot;boolean&quot;,
        ///            &quot;title&quot;:&quot;generate_tracks&quot;,            
        ///        }, 
        ///		&quot;generate_scenes&quot;:{
        ///            &quot;type&quot;:&quot;boolean&quot;,
        ///            &quot;title&quot;:&quot;generate_scenes&quot;,
        ///        }, 
        ///		&quot;tracks_only_lost&quot;:{ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR_Recognizer_Module_schema {
            get {
                return ResourceManager.GetString("LPR_Recognizer_Module_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/lpr.recognizer.parameters#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///
        ///    &quot;title&quot;:&quot;LPR Recognizer Parameters&quot;,
        ///    &quot;description&quot;:&quot;LPR Recognizer Parameters&quot;,
        ///
        ///	&apos;definitions&apos;:{
        ///		&apos;plate_template_item&apos;:{
        ///			type:&apos;array&apos;,
        ///			format:&apos;static&apos;,
        ///			items:[
        ///				{&apos;$ref&apos;:&apos;definitions#/definitions/uint&apos;},
        ///				{&apos;$ref&apos;:&apos;definitions#/definitions/uint&apos;},
        ///				{&apos;$ref&apos;:&apos;definitions#/definitions/uint&apos;},
        ///				{ 
        ///					type:&apos;string&apos;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR_Recognizer_Parameters_schema {
            get {
                return ResourceManager.GetString("LPR_Recognizer_Parameters_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/lpr.recognizer.principal#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///
        ///    &quot;title&quot;:&quot;LPR Recognizer Principal&quot;,
        ///    &quot;description&quot;:&quot;LPR Recognizer Principal&quot;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;principal_fps&quot;:{
        ///            &quot;type&quot;:&quot;integer&quot;,
        ///            &quot;title&quot;:&quot;principal_fps&quot;,  
        ///			&apos;$ref&apos;:&apos;definitions#/definitions/uint&apos;,    
        ///        }, 
        ///		&quot;principal_channels&quot;:{
        ///            &quot;type&quot;:&quot;integer&quot;,
        ///            &quot;title&quot;:&quot;principa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR_Recognizer_Principal_schema {
            get {
                return ResourceManager.GetString("LPR_Recognizer_Principal_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/lpr#&quot;,
        ///    &quot;type&quot;:&quot;object&quot;,
        ///    &quot;format&quot;:&quot;tab&quot;,
        ///    &quot;title&quot;:&quot;LPR&quot;,
        ///    &quot;description&quot;:&quot;LPR&quot;,
        ///    &quot;properties&quot;:{
        ///        &quot;apphost&quot;:{
        ///            &quot;type&quot;:&quot;object&quot;,
        ///            &quot;title&quot;:&quot;apphost&quot;,
        ///            &quot;properties&quot;:{
        ///                &quot;component_path&quot;:{
        ///                    &quot;type&quot;:&quot;string&quot;,
        ///                    &quot;title&quot;:&quot;component path&quot;
        ///                }
        ///            },
        ///            &quot;required&quot;:[
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR_schema {
            get {
                return ResourceManager.GetString("LPR_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  
        ///	&quot;Import&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libimport-file.so&quot;,
        ///		&quot;ParamSet&quot;:
        ///		{
        ///			&quot;FrameMeta&quot;:
        ///			{
        ///				&quot;Prefix&quot;:&quot;&quot;,
        ///				&quot;Suffix&quot;:&quot;.gscene&quot;,
        ///				&quot;Dir&quot;:&quot;&quot;
        ///			},
        ///			&quot;FrameData&quot;:
        ///			{
        ///				&quot;Prefix&quot;:&quot;&quot;,
        ///				&quot;Suffix&quot;:&quot;.gframe&quot;,
        ///				&quot;Dir&quot;:&quot;&quot;
        ///			}
        ///		}
        ///	},
        ///	&quot;Codec&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libcodec-jpegturbo.so&quot;,
        ///		&quot;Source&quot;:&quot;MONO8T&quot;,
        ///		&quot;Target&quot;:&quot;JPEG&quot;,
        ///		&quot;ParamSet&quot;: {}
        ///	},
        ///	&quot;Export&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libexport-file.so&quot;,
        ///		&quot;Par [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaCodec {
            get {
                return ResourceManager.GetString("MediaCodec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/mediacodec#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;title&apos; : &apos;MediaCodec main.conf&apos;,
        ///
        ///	&apos;type&apos; : &apos;object&apos;,
        ///	format:&apos;tab&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;FrameParamSet&apos; : {			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				&quot;FrameMeta&quot;: {&apos;$ref&apos; : &apos;definitions#/definitions/EventDir&apos;},
        ///				&quot;FrameData&quot;: {&apos;$ref&apos; : &apos;definitions#/definitions/EventDir&apos;},
        ///			},
        ///			&quot;required&quot; : [ 
        ///				&apos;FrameMeta&apos;, 
        ///				&quot;FrameData&quot; 
        ///			],
        ///			&quot;additionalProperti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaCodec_schema {
            get {
                return ResourceManager.GetString("MediaCodec_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TxPipes&quot;:
        ///  [
        ///    &quot;/var/spool/edge/mg0-ra0-pipe&quot;
        ///  ],
        ///  &quot;Driver&quot;:
        ///  {
        ///    &quot;Vendor&quot;:&quot;Basler&quot;,
        ///    &quot;Model&quot;:&quot;acA1300-30um&quot;,
        ///    &quot;Firmware&quot;:&quot;3.0.6.RC1&quot;,
        ///    &quot;Id&quot;:&quot;uniqueId1234&quot;,
        ///    &quot;File&quot;:&quot;/opt/edge/libexec/mediagrabber/libdriver-basler.so&quot;,
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      
        ///    }
        ///  },
        ///  &quot;FileApi&quot;:
        ///  {
        ///    &quot;HaltEvent&quot;:
        ///    {
        ///       &quot;Prefix&quot;:&quot;&quot;,                                 
        ///       &quot;Suffix&quot;:&quot;&quot;,                                 
        ///       &quot;Dir&quot;:&quot;/var/spool/edge/mg0-ss0-halt&quot;,        
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaGrabber {
            get {
                return ResourceManager.GetString("MediaGrabber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/mediagrabber#&quot;,
        ///
        ///	title:&apos;Media Grabber&apos;,
        ///	description:&apos;Media grabber description&apos;,
        ///
        ///    type:&quot;object&quot;,
        ///    format:&apos;tab&apos;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;TxPipes&quot;:{
        ///            &quot;title&quot;:&quot;TxPipes&quot;,
        ///			description:&apos;Множество именованных каналов для передачи событий формирования кадра.&apos;,
        ///
        ///            &quot;type&quot;:&quot;array&quot;,
        ///            &quot;items&quot;: { &quot;type&quot;:&quot;string&quot;, },
        ///			&quot;default&quot; : &quot;/&quot;,
        ///        },
        ///
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaGrabber_schema {
            get {
                return ResourceManager.GetString("MediaGrabber_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Store&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;RootDir&quot;:&quot;var/opt/edge/mediastore.0/&quot;,        // string
        ///      &quot;Channels&quot;:
        ///      [
        ///        {
        ///          &quot;Name&quot;:&quot;0&quot;,                                // string
        ///          &quot;DepthAsMin&quot;:30                            // uint
        ///        }
        ///      ]
        ///    }
        ///  },
        ///  &quot;SocketApi&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;EndPoint&quot;:&quot;/tmp/edge/mediastore.0.endpoint&quot;,  // string
        ///      &quot;MaxClients&quot;:1                                 // uint
        ///    }
        ///  },
        ///  &quot;FileApi&quot;:
        ///  {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaStore {
            get {
                return ResourceManager.GetString("MediaStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/mediastore#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;title&apos; : &apos;MediaStore main.conf&apos;,
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///	
        ///		&apos;Store.ParamSet&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				
        ///				&quot;RootDir&quot;: {
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				},
        ///				&quot;Channels&quot;: { 
        ///
        ///					&apos;type&apos; : &apos;array&apos;,
        ///
        ///					&quot;items&quot; : {
        ///						
        ///						&quot;title&quot; : &quot;item&quot;,
        ///						&quot;type&quot; : &quot;object&quot;,
        ///
        ///						&quot;properties&quot; : 
        ///						{
        ///							&quot;Name&quot;: { 
        ///				 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaStore_schema {
            get {
                return ResourceManager.GetString("MediaStore_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;source_url&quot;: &quot;http://192.168.106.200:8080/stream/live&quot;, 
        ///  &quot;sink_dir&quot;: &quot;Z:/overlayrender/&quot;                          
        ///}
        ///.
        /// </summary>
        internal static string OverlayRender {
            get {
                return ResourceManager.GetString("OverlayRender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/overlayrender&quot;,
        ///
        ///	&apos;title&apos; : &apos;Overlay Render&apos;,
        ///
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	
        ///	&apos;properties&apos; : {
        ///		
        ///		&apos;source_url&apos; : {
        ///			title:&apos;source_url&apos;,
        ///			description:&apos;source_url&apos;,
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},
        ///		&apos;sink_dir&apos; : {
        ///			title:&apos;sink_dir&apos;,
        ///			description:&apos;sink_dir&apos;,
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},
        ///		
        ///	},
        ///
        ///	&quot;required&quot; : [ 
        ///		&quot;source_url&quot;,
        ///		&quot;sink_dir&quot;,
        ///		
        ///	],
        ///    &quot;additionalProperties&quot;: false,
        ///}.
        /// </summary>
        internal static string OverlayRender_schema {
            get {
                return ResourceManager.GetString("OverlayRender_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;FileApi&quot;:
        ///  {
        ///    &quot;StreamReact&quot;:
        ///    {
        ///      &quot;FrameDir&quot;:&quot;/var/spool/edge/mc1-os0-frame/&quot;,
        ///      &quot;SceneDir&quot;:&quot;/var/spool/edge/tr0-os0-scene/&quot;
        ///    },
        ///    &quot;StreamEvent&quot;:
        ///    {
        ///      &quot;Dir&quot;:&quot;/var/spool/edge/os0-ocX-scene/&quot;,
        ///      &quot;Fps&quot;:5
        ///    }
        ///  }
        ///}
        ///.
        /// </summary>
        internal static string OverlayServer {
            get {
                return ResourceManager.GetString("OverlayServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/overlayserver&quot;,
        ///
        ///	&apos;title&apos; : &apos;Overlay Server main.conf&apos;,
        ///
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	
        ///	&apos;properties&apos; : {
        ///		
        ///		&apos;FileApi&apos; : {
        ///			&apos;title&apos; : &apos;FileApi&apos;,
        ///
        ///			&apos;type&apos; : &apos;object&apos;,
        ///	
        ///			&apos;properties&apos; : {
        ///		
        ///				&apos;StreamReact&apos; : {
        ///					&apos;title&apos; : &apos;StreamReact&apos;,
        ///
        ///					&apos;type&apos; : &apos;object&apos;,
        ///	
        ///					&apos;properties&apos; : {
        ///		
        ///						&apos;FrameDir&apos; : {
        ///							&apos;title&apos; : &apos;FrameDir&apos;,
        ///							type:&apos;string&apos;,
        ///						},	
        ///						&apos;SceneD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OverlayServer_schema {
            get {
                return ResourceManager.GetString("OverlayServer_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;RxPipe&quot;:&quot;pathto/fifo&quot;,
        ///    &quot;MappingConf&quot;:&quot;/etc/edge/radar.0/mapping.conf&quot;,
        ///    &quot;Driver&quot;:{
        ///        &quot;File&quot;:&quot;/opt/edge/libexec/radar/libdriver-protocol.so&quot;,
        ///        &quot;ParamSet&quot;:{
        ///			&quot;PosX&quot;:14,    
        ///			&quot;PosY&quot;:14,    
        ///			&quot;PosZ&quot;:14,    
        ///			&quot;PosH&quot;:14,    
        ///			&quot;AngleXY&quot;:14, 
        ///			&quot;AngleXZ&quot;:14, 
        ///			&quot;AngleYZ&quot;:14,  
        ///		},
        ///
        ///    },
        ///    &quot;Tracker&quot;:{
        ///        &quot;SceneTout&quot;:50,
        ///        &quot;CloseTout&quot;:300,
        ///        &quot;MaxFragSize&quot;:10,
        ///        &quot;MaxTrackCount&quot;:64,
        ///        &quot;MaxSceneCount&quot;:50
        ///    },
        ///    &quot;SceneExpo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radar {
            get {
                return ResourceManager.GetString("Radar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/radar.drivers&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;libdriver-protocol.so-params&apos;:{
        ///			type:&apos;object&apos;,
        ///
        ///			properties:{
        ///
        ///				&quot;File&quot;:{
        ///					&quot;title&quot;:&quot;File&quot;,
        ///					&quot;type&quot;:&quot;string&quot;,
        ///				},
        ///				&quot;ParamSet&quot;:{
        ///					&quot;description&quot;:&quot;Параметры&quot;,
        ///					&quot;type&quot;:&quot;object&quot;,
        ///				},
        ///			},
        ///			required:[
        ///				&apos;File&apos;,
        ///				&apos;ParamSet&apos;,
        ///			],
        ///		},
        ///
        ///		&apos;libdriver-protocol.so&apos; : {
        ///			title:&apos;libdriver-protocol.so&apos;,
        ///
        ///			&quot;type&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radar_drivers_schema {
            get {
                return ResourceManager.GetString("Radar_drivers_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/radar&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&quot;title&quot; : &quot;Radar main.conf&quot;,
        ///	type:&apos;object&apos;,	
        ///	format: &apos;tab&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///
        ///		&apos;QueueSetObject&apos; : {
        ///
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///
        ///				&quot;QueueSet&quot;:	{ 
        ///
        ///					&apos;type&apos; : &apos;array&apos;,
        ///					&apos;format&apos;: &apos;list&apos;,
        ///
        ///					&apos;items&apos; : {
        ///
        ///						&apos;type&apos; : &apos;object&apos;,
        ///
        ///						&apos;properties&apos; : {
        ///
        ///							&quot;File&quot;: {
        ///								&apos;type&apos; : &apos;string&apos;
        ///							},
        ///
        ///							&quot;ParamSet&quot; : {
        ///								&apos;type [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radar_schema {
            get {
                return ResourceManager.GetString("Radar_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;track_dirpath&quot;: &quot;/var/spool/edge/tr0-sc0-track&quot;,
        ///  &quot;event_store_workers_amount&quot;: 3,
        ///  &quot;root_result_dirpath&quot;: &quot;/var/spool/edge/sc0-es0-fact&quot;,
        ///  &quot;mediastore_endpoint&quot;: &quot;/var/spool/edge/sc0-ms0-uds&quot;,
        ///  &quot;min_velocity_for_insert&quot;: 0,
        ///  &quot;channel&quot;: 0,
        ///  &quot;use_optimistic_load_frame_request&quot;: true,
        ///}.
        /// </summary>
        internal static string SpeedControl {
            get {
                return ResourceManager.GetString("SpeedControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/speedcontrol&quot;,
        ///
        ///	&apos;title&apos; : &apos;SpeedControl main.conf&apos;,
        ///
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	
        ///	&apos;properties&apos; : {
        ///		
        ///		&apos;track_dirpath&apos; : {
        ///			title:&apos;track_dirpath&apos;,
        ///			description:&apos;track_dirpath&apos;,
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},
        ///		&apos;event_store_workers_amount&apos; : {
        ///			title:&apos;event_store_workers_amount&apos;,
        ///			description:&apos;event_store_workers_amount&apos;,
        ///
        ///			&apos;type&apos; : &apos;integer&apos;,
        ///			minimum: 0,
        ///		},
        ///		&apos;root_result_dirpath&apos;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpeedControl_schema {
            get {
                return ResourceManager.GetString("SpeedControl_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&apos;cool&apos; : [&apos;string&apos;],
        ///	allOf:{},
        ///	&apos;boolean&apos; : true,
        ///	&apos;string&apos; : &apos;x123&apos;,
        ///	&apos;ipv4&apos; : &apos;192.168.100.0&apos;,
        ///	&apos;object&apos; : {
        ///		&apos;bool1&apos; : true,
        ///		&apos;string2&apos; : &apos;string&apos;,
        ///	},
        ///	&apos;objectNesting&apos; : {
        ///		&apos;object&apos; : null,
        ///	},
        ///	&apos;static_list&apos; : [13,14],
        ///	&apos;select_list&apos; : [&apos;0&apos;, &apos;ListItem1&apos;, &apos;Item2&apos;, &apos;end.&apos;],
        ///}.
        /// </summary>
        internal static string TestData {
            get {
                return ResourceManager.GetString("TestData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&apos;type&apos;:&apos;object&apos;,
        ///
        ///    &apos;title&apos;:&apos;Root Object Title&apos;,
        ///	&apos;description&apos; : &apos;This is Root Object description&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///	
        ///		&apos;obj1&apos; : {
        ///		
        ///			&apos;title&apos; : &apos;Object1&apos;,
        ///			&apos;type&apos; : [ &apos;object&apos;, &apos;null&apos;],
        ///
        ///			&apos;description&apos; : &apos;This is the object description&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				&apos;bool1&apos; : {
        ///					&apos;type&apos;:&apos;boolean&apos;,
        ///				},
        ///				&apos;string2&apos; : {
        ///					&apos;type&apos;:&apos;string&apos;,
        ///				},
        ///			},
        ///			&apos;default&apos;:{
        ///				&apos;bool1&apos; : true, 
        ///				string2 : &apos;default&apos;
        ///			},
        ///			required : [&apos;bool1&apos;, &apos;string2&apos;],
        ///		},
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestSchema {
            get {
                return ResourceManager.GetString("TestSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { 
        ///  &quot;result_dirpath&quot;: &quot;/var/spool/edge/tr0-sc0-track&quot;,     
        ///  &quot;lpr_track_dirpath&quot;: &quot;/var/spool/edge/lr0-tr0-track&quot;,  
        ///  &quot;composite_dirpath&quot;: &quot;/var/spool/edge/cp0-tr0-scene&quot;,  
        ///  &quot;annotation_dirpath&quot;: &quot;/var/spool/edge/tr0-os0-scene&quot;, 
        ///  &quot;gscene_key&quot;: &quot;mg0-scene&quot;,                             
        ///  &quot;rscene_key&quot;: &quot;ra0-scene&quot;,                             
        ///  &quot;lscene_key&quot;: &quot;lp0-scene&quot;                              
        ///}.
        /// </summary>
        internal static string Tracker {
            get {
                return ResourceManager.GetString("Tracker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/tracker&quot;,
        ///
        ///	&apos;title&apos; : &apos;Tracker&apos;,
        ///
        ///	&apos;type&apos; : &apos;object&apos;,
        ///	
        ///	&apos;properties&apos; : {
        ///		
        ///		&apos;result_dirpath&apos; : {
        ///			title:&apos;result_dirpath&apos;,		
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},	
        ///		&apos;lpr_track_dirpath&apos; : {
        ///			title:&apos;lpr_track_dirpath&apos;,		
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},
        ///		&apos;composite_dirpath&apos; : {
        ///			title:&apos;composite_dirpath&apos;,		
        ///
        ///			&apos;type&apos; : &apos;string&apos;,
        ///		},
        ///		&apos;annotation_dirpath&apos; : {
        ///			title:&apos;annotation_dirpath&apos;,		
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tracker_schema {
            get {
                return ResourceManager.GetString("Tracker_schema", resourceCulture);
            }
        }
    }
}
