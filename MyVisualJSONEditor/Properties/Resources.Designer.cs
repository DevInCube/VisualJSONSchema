//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyVisualJSONEditor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyVisualJSONEditor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Source&quot;:
        ///  {
        ///    &quot;MasterName&quot;:&quot;gscene&quot;,
        ///    &quot;QueueSet&quot;:
        ///    [
        ///      {
        ///        &quot;Name&quot;:&quot;rscene&quot;,
        ///        &quot;Prefix&quot;:&quot;&quot;,
        ///        &quot;Suffix&quot;:&quot;.rscene&quot;,
        ///        &quot;Dir&quot;:&quot;pathto/scene/export/folder&quot;,
        ///        &quot;Remove&quot;:true,
        ///        &quot;Sink&quot;:true,
        ///        &quot;Tout&quot;:1000
        ///      },
        ///      {
        ///        &quot;Name&quot;:&quot;gscene&quot;,
        ///        &quot;Prefix&quot;:&quot;&quot;,
        ///        &quot;Suffix&quot;:&quot;.gscene&quot;,
        ///        &quot;Dir&quot;:&quot;pathto/scene/export/folder&quot;,
        ///        &quot;Remove&quot;:true,
        ///        &quot;Sink&quot;:true,
        ///        &quot;Tout&quot;:1000
        ///      }
        ///    ]
        ///  },
        ///  &quot;Sink&quot;:
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Compositor {
            get {
                return ResourceManager.GetString("Compositor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/compositor#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;Source&quot;:{
        ///
        ///            &quot;id&quot;:&quot;Source&quot;,
        ///            &quot;type&quot;:&quot;object&quot;,
        ///
        ///            &quot;properties&quot;:{
        ///
        ///                &quot;MasterName&quot;:{
        ///                    &quot;id&quot;:&quot;MasterName&quot;,
        ///                    &quot;type&quot;: [&quot;string&quot;, &quot;null&quot;]
        ///                },
        ///
        ///                &quot;QueueSet&quot;:{
        ///                    &quot;id&quot;:&quot;QueueSet&quot;,
        ///                    &quot;type&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Compositor_schema {
            get {
                return ResourceManager.GetString("Compositor_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/definitions#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;EventDir&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///                      
        ///				&quot;Prefix&quot;:{
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				},                            
        ///				&quot;Suffix&quot;:{
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				},                              
        ///				&quot;Dir&quot;:{
        ///					&apos;type&apos; : &apos;string&apos;,
        ///				}
        ///			},
        ///
        ///			&quot;required&quot; : [ &apos;Prefix&apos;, &apos;Suffix&apos;, &apos;Dir&apos; ],
        ///		},
        ///
        ///		&apos;FrameReac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string definitions {
            get {
                return ResourceManager.GetString("definitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;Store&quot;:
        ///	{
        ///		&quot;ParamSet&quot;:
        ///		{
        ///			&quot;DbHost&quot;:&quot;127.0.0.1&quot;,
        ///			&quot;DbPort&quot;: 5432,
        ///			&quot;DbName&quot;:&quot;autocode&quot;,
        ///			&quot;DbUser&quot;:&quot;autocode&quot;,
        ///			&quot;DbPass&quot;: &quot;autocode&quot;,
        ///			&quot;PostName&quot;:&quot;EdgeServer&quot;,
        ///			&quot;Post&quot;:&quot;69e86fa7-e1ad-4e68-96b7-b910f40bdb49&quot;
        ///		}
        ///	},
        ///
        ///	&quot;SocketApi&quot;: 
        ///	{
        ///		&quot;ParamSet&quot;: 
        ///		{
        ///			&quot;Host&quot;: &quot;127.0.0.1&quot;,
        ///			&quot;Port&quot;: 14
        ///		}
        ///	},
        ///	 &quot;FileApi&quot;:
        ///	 {
        ///	   &quot;AddFactReact&quot;:
        ///	   [
        ///		 {
        ///		   &quot;ParamSet&quot;:
        ///		   {
        ///			 &quot;Channel&quot;:0,
        ///			 &quot;Prefix&quot;:&quot;&quot;,
        ///			 &quot;Suffix&quot;:&quot;&quot;,
        ///			 &quot;Dir&quot;:&quot;/tmp/edge/event_store/stor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EventStore {
            get {
                return ResourceManager.GetString("EventStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        /// {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/eventstore#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&quot;title&quot; : &quot;EventStore main.xconf&quot;,
        ///	&quot;type&quot; : &quot;object&quot;,
        ///
        ///	&apos;format&apos; : &apos;tab&apos;,
        ///
        ///	&quot;definitions&quot; : {
        ///
        ///		&quot;DbStore.ParamSet&quot; : {
        ///
        ///			&quot;type&quot; : &quot;object&quot;,
        ///
        ///			&quot;properties&quot;: {
        ///					
        ///				&quot;DbHost&quot;: {
        ///					&quot;title&quot; : &quot;Host&quot;,
        ///					&quot;type&quot;: &quot;string&quot;,
        ///					&quot;format&quot;: &quot;ipv4&quot;,
        ///					&quot;default&quot;: &quot;127.0.0.1&quot;,
        ///					&quot;binding&quot; : {
        ///						&quot;path&quot; : &quot;DbHost&quot;
        ///					}
        ///				},
        ///				&quot;DbPort&quot;: {
        ///					&quot;title&quot; : [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EventStore_schema {
            get {
                return ResourceManager.GetString("EventStore_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Analyzer&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;Target&quot;:
        ///      {
        ///        &quot;Median&quot;:[70, 150],
        ///        &quot;SteadyState&quot;:
        ///        {
        ///          &quot;Unstable&quot;:5,
        ///          &quot;PreStable&quot;:10,
        ///          &quot;Stable&quot;:15
        ///        }
        ///      },
        ///      &quot;Sweep&quot;:
        ///      {
        ///        &quot;Gain&quot;:[0.0, 24.0, 0.5],        
        ///        &quot;ExpTime&quot;:[1000, 2000, 5],        
        ///        &quot;Lut12&quot;:
        ///        {
        ///          &quot;Day&quot;:&quot;/etc/edge/grabcontrol.0/day.lut&quot;,
        ///          &quot;Night&quot;:&quot;/etc/edge/grabcontrol.0/night.lut&quot;,
        ///          &quot;Default&quot;:&quot;/etc/edge/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GrabControl {
            get {
                return ResourceManager.GetString("GrabControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/grabcontrol#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///	&apos;format&apos; : &apos;tab&apos;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;Analyzer&quot;:{
        ///            &quot;id&quot;:&quot;Analyzer&quot;,
        ///            &quot;type&quot;:&quot;object&quot;,
        ///
        ///            &quot;properties&quot;:{
        ///
        ///                &quot;ParamSet&quot;:{
        ///                    &quot;id&quot;:&quot;ParamSet&quot;,
        ///                    &quot;type&quot;:&quot;object&quot;,
        ///
        ///                    &quot;properties&quot;:{
        ///
        ///                        &quot;Target&quot;:{
        ///                            &quot;id&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GrabControl_schema {
            get {
                return ResourceManager.GetString("GrabControl_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;media-source&quot;:{
        ///        &quot;data_input_dir&quot;:&quot;/home/maxl/test/in_data&quot;,
        ///        &quot;meta_input_dir&quot;:&quot;/home/maxl/test/in_meta&quot;,
        ///        &quot;media_extension&quot;:&quot;.gframe&quot;
        ///    },
        ///    &quot;output&quot;:{
        ///        &quot;meta_queue_set&quot;:[
        ///            {
        ///                &quot;prefix&quot;:&quot;&quot;,
        ///                &quot;suffix&quot;:&quot;.lscene&quot;,
        ///                &quot;dir&quot;:&quot;/var/spool/edge/lpr.x/scene.0/&quot;,
        ///                &quot;type&quot;:&quot;scene&quot;
        ///            },
        ///            {
        ///                &quot;prefix&quot;:&quot;&quot;,
        ///                &quot;suffix&quot;:&quot;.ltrack&quot;,
        ///                &quot;dir&quot;:&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR {
            get {
                return ResourceManager.GetString("LPR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/lpr#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///	&apos;format&apos; : &apos;tab&apos;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;media-source&quot;:{
        ///
        ///            &quot;id&quot;:&quot;media-source&quot;,
        ///            &quot;type&quot;:&quot;object&quot;,
        ///
        ///            &quot;properties&quot;:{
        ///
        ///                &quot;data_input_dir&quot;:{
        ///                    &quot;id&quot;:&quot;data_input_dir&quot;,
        ///                    &quot;type&quot;:&quot;string&quot;
        ///                },
        ///                &quot;meta_input_dir&quot;:{
        ///                    &quot;id&quot;:&quot;meta_input_di [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LPR_schema {
            get {
                return ResourceManager.GetString("LPR_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  
        ///	&quot;Import&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libimport-file.so&quot;,
        ///		&quot;ParamSet&quot;:
        ///		{
        ///			&quot;FrameMeta&quot;:
        ///			{
        ///				&quot;Prefix&quot;:&quot;&quot;,
        ///				&quot;Suffix&quot;:&quot;.gscene&quot;,
        ///				&quot;Dir&quot;:&quot;&quot;
        ///			},
        ///			&quot;FrameData&quot;:
        ///			{
        ///				&quot;Prefix&quot;:&quot;&quot;,
        ///				&quot;Suffix&quot;:&quot;.gframe&quot;,
        ///				&quot;Dir&quot;:&quot;&quot;
        ///			}
        ///		}
        ///	},
        ///	&quot;Codec&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libcodec-jpegturbo.so&quot;,
        ///		&quot;Source&quot;:&quot;MONO8T&quot;,
        ///		&quot;Target&quot;:&quot;JPEG&quot;,
        ///		&quot;ParamSet&quot;: {}
        ///	},
        ///	&quot;Export&quot;:
        ///	{
        ///		&quot;File&quot;:&quot;/opt/edge/libexec/mediacodec/libexport-file.so&quot;,
        ///		&quot;Par [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaCodec {
            get {
                return ResourceManager.GetString("MediaCodec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/mediacodec#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;title&apos; : &apos;MediaCodec main.conf&apos;,
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;FrameParamSet&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///
        ///				&quot;FrameMeta&quot;: {&apos;$ref&apos; : &apos;definitions#/definitions/EventDir&apos;},
        ///				&quot;FrameData&quot;: {&apos;$ref&apos; : &apos;definitions#/definitions/EventDir&apos;},
        ///			},
        ///
        ///			&quot;required&quot; : [ &apos;FrameMeta&apos;, &quot;FrameData&quot; ],
        ///			&quot;additionalProperties&quot;: false,
        ///		},
        ///	},
        ///
        ///	&apos;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaCodec_schema {
            get {
                return ResourceManager.GetString("MediaCodec_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;TxPipes&quot;:
        ///  [
        ///    &quot;/tmp/Fifofile1&quot;,
        ///    &quot;/tmp/Fifofile2&quot;,
        ///    &quot;/tmp/Fifofile3&quot;
        ///  ],
        ///  &quot;Driver&quot;:
        ///  {
        ///    &quot;Vendor&quot;:&quot;Basler&quot;,
        ///    &quot;Model&quot;:&quot;acA1300-30um&quot;,
        ///    &quot;Firmware&quot;:&quot;3.0.6.RC1&quot;,
        ///    &quot;Id&quot;:&quot;uniqueId1234&quot;,
        ///    &quot;File&quot;:&quot;/opt/edge/libexec/mediagrabber/libdriver-basler.so&quot;,
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      
        ///    }
        ///  },
        ///  &quot;FrameExport&quot;:
        ///  {
        ///    &quot;Prefix&quot;:&quot;&quot;,
        ///    &quot;Suffix&quot;:&quot;.mgframe&quot;,
        ///    &quot;Dir&quot;:&quot;&quot;
        ///  },
        ///  &quot;SceneExport&quot;:
        ///  {
        ///    &quot;EntrySet&quot;:
        ///    [
        ///      {
        ///        &quot;Prefix&quot;:&quot;&quot;,
        ///        &quot;Suffi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaGrabber {
            get {
                return ResourceManager.GetString("MediaGrabber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/mediagrabber#&quot;,
        ///
        ///    &quot;type&quot;:&quot;object&quot;,
        ///
        ///    &quot;properties&quot;:{
        ///
        ///        &quot;TxPipes&quot;:{
        ///            &quot;id&quot;:&quot;TxPipes&quot;,
        ///            &quot;type&quot;:&quot;array&quot;,
        ///
        ///            &quot;items&quot;: {
        ///                    &quot;type&quot;:&quot;string&quot;
        ///            },
        ///
        ///			&quot;default&quot; : &quot;&quot;,
        ///        },
        ///
        ///        &quot;Driver&quot;:{
        ///            &quot;id&quot;:&quot;Driver&quot;,
        ///            &quot;type&quot;:&quot;object&quot;,
        ///
        ///            &quot;properties&quot;:{
        ///                &quot;Vendor&quot;:{
        ///                  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaGrabber_schema {
            get {
                return ResourceManager.GetString("MediaGrabber_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Store&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;RootDir&quot;:&quot;var/opt/edge/mediastore.0/&quot;,        // string
        ///      &quot;Channels&quot;:
        ///      [
        ///        {
        ///          &quot;Name&quot;:&quot;0&quot;,                                // string
        ///          &quot;DepthAsMin&quot;:30                            // uint
        ///        }
        ///      ]
        ///    }
        ///  },
        ///  &quot;SocketApi&quot;:
        ///  {
        ///    &quot;ParamSet&quot;:
        ///    {
        ///      &quot;EndPoint&quot;:&quot;/tmp/edge/mediastore.0.endpoint&quot;,  // string
        ///      &quot;MaxClients&quot;:1                                 // uint
        ///    }
        ///  },
        ///  &quot;FileApi&quot;:
        ///  {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaStore {
            get {
                return ResourceManager.GetString("MediaStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/mediastore#&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&apos;title&apos; : &apos;MediaStore main.conf&apos;,
        ///	&apos;type&apos; : &apos;object&apos;,
        ///
        ///	&apos;definitions&apos; : {
        ///
        ///		
        ///
        ///		&apos;Store.ParamSet&apos; : {
        ///			
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				
        ///				&quot;RootDir&quot;: {
        ///					&apos;type&apos; : &apos;string&apos;
        ///				},
        ///				&quot;Channels&quot;: { 
        ///
        ///					&apos;type&apos; : &apos;array&apos;,
        ///
        ///					&quot;items&quot; : {
        ///						
        ///						&quot;title&quot; : &quot;item&quot;,
        ///						&quot;type&quot; : &quot;object&quot;,
        ///
        ///						&quot;properties&quot; : 
        ///						{
        ///							&quot;Name&quot;: { 
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MediaStore_schema {
            get {
                return ResourceManager.GetString("MediaStore_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;RxPipe&quot;:&quot;pathto/fifo&quot;,
        ///    &quot;MappingConf&quot;:&quot;/etc/edge/radar.0/mapping.conf&quot;,
        ///    &quot;Driver&quot;:{
        ///        &quot;File&quot;:&quot;/opt/edge/libexec/radar/libdriver-protocol.so&quot;,
        ///        &quot;ParamSet&quot;:{
        ///
        ///        }
        ///    },
        ///    &quot;Tracker&quot;:{
        ///        &quot;SceneTout&quot;:50,
        ///        &quot;CloseTout&quot;:300,
        ///        &quot;MaxFragSize&quot;:10,
        ///        &quot;MaxTrackCount&quot;:64,
        ///        &quot;MaxSceneCount&quot;:50
        ///    },
        ///    &quot;SceneExport&quot;:{
        ///        &quot;QueueSet&quot;:[
        ///            {
        ///                &quot;File&quot;:&quot;pathto/libscene_exporter.so&quot;,
        ///                &quot;ParamSet&quot;:{
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radar {
            get {
                return ResourceManager.GetString("Radar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;id&quot; : &quot;http://vit.com.ua/edgeserver/radar&quot;,
        ///	&quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;,
        ///
        ///	&quot;title&quot; : &quot;Radar main.conf&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///
        ///		&apos;ExportArrayItem&apos; : {
        ///			&apos;type&apos; : &apos;object&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				&quot;File&quot;: {
        ///					&apos;type&apos; : &apos;string&apos;
        ///				},
        ///				&quot;ParamSet&quot; : {
        ///					&apos;type&apos; : &apos;object&apos;,
        ///					&apos;oneOf&apos; : [{&apos;$ref&apos;:&apos;definitions#/definitions/EventDir&apos;}],
        ///				},
        ///			},
        ///
        ///			&quot;required&quot; : [ &apos;File&apos; ],
        ///			&quot;additionalProperties&quot;: false,
        ///		},
        ///
        ///		&apos;QueueSetObject&apos; : {
        ///
        ///			&apos;typ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radar_schema {
            get {
                return ResourceManager.GetString("Radar_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;$schema&quot;:&quot;http://json-schema.org/draft-04/schema#&quot;,
        ///    &quot;id&quot;:&quot;http://vit.com.ua/edgeserver/radars&quot;,
        ///
        ///	&apos;definitions&apos; : {
        ///		
        ///		&apos;smartmicro39&apos; : {
        ///
        ///			&quot;type&quot;:&quot;object&quot;,
        ///
        ///			&quot;properties&quot;:{
        ///
        ///				&quot;PosX&quot;:{
        ///					&quot;id&quot;:&quot;PosX&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosY&quot;:{
        ///					&quot;id&quot;:&quot;PosY&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosZ&quot;:{
        ///					&quot;id&quot;:&quot;PosZ&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;PosH&quot;:{
        ///					&quot;id&quot;:&quot;PosH&quot;,
        ///					&quot;type&quot;:&quot;integer&quot;
        ///				},
        ///				&quot;AngleXY&quot;:{
        ///					&quot;id&quot;:&quot;AngleXY&quot;,
        ///					&quot;type&quot;:&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Radars_schema {
            get {
                return ResourceManager.GetString("Radars_schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&apos;boolean&apos; : true,
        ///	&apos;string&apos; : &apos;string&apos;
        ///}.
        /// </summary>
        internal static string TestData {
            get {
                return ResourceManager.GetString("TestData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&apos;type&apos;:&apos;object&apos;, 
        ///	
        ///
        ///    &apos;title&apos;:&apos;Root Object Title&apos;,
        ///	&apos;description&apos; : &apos;This is Root Object description&apos;,
        ///
        ///    &apos;properties&apos;:{
        ///
        ///		&apos;boolean&apos; : {
        ///            &apos;type&apos;:&apos;boolean&apos;,
        ///			default : true,
        ///			readonly : true
        ///        },
        ///        &apos;string&apos; : {
        ///            &apos;type&apos;:&apos;string&apos;,
        ///			visible : false
        ///        },
        ///		&apos;object&apos; : {
        ///
        ///			type : [ &apos;object&apos;, &apos;null&apos;],
        ///
        ///			title : &apos;This is the object&apos;,
        ///			description : &apos;This is the object description&apos;,
        ///
        ///			&apos;properties&apos; : {
        ///				&apos;bool1&apos; : {
        ///					&apos;type&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestSchema {
            get {
                return ResourceManager.GetString("TestSchema", resourceCulture);
            }
        }
    }
}
